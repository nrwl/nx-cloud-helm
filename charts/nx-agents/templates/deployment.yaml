---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nx-cloud-workflow-controller
  namespace: {{ .Values.global.namespace | quote }}
  labels:
    {{- include "nxCloud.app.labels" . | indent 4 }}
  {{- if .Values.controller.deployment.annotations }}
  annotations:
    {{- toYaml .Values.controller.deployment.annotations | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: nx-cloud-workflow-controller
  replicas: 1
  {{- if .Values.controller.deployment.strategy }}
  strategy:
    {{- toYaml .Values.controller.deployment.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app: nx-cloud-workflow-controller
    spec:
      securityContext:
        runAsNonRoot: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      {{- if .Values.controller.deployment.affinity }}
      affinity:
        {{- toYaml .Values.controller.deployment.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.controller.deployment.tolerations }}
      tolerations:
        {{- toYaml .Values.controller.deployment.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.controller.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.controller.deployment.nodeSelector | nindent 8 }}
      {{- end }}
      containers:
        - command:
          - /nx-cloud-workflow-controller
          - --namespace={{ .Values.global.namespace }}
          - --in-cluster=true
          {{- range $key, $value := .Values.executor.env }}
          - --executor-env={{ $key }}={{ $value }}
          {{- end }}
          - --workflow-service-address=http://nx-cloud-workflow-controller-service:9000
          {{- range $key, $value := .Values.controller.deployment.args }}
          - --{{ $key }}={{ $value }}
          {{- end }}
          image: {{ include "nxCloud.images.workflowController.image" . }}
          imagePullPolicy: {{ .Values.controller.image.pullPolicy | quote }}
          {{- if .Values.controller.resources }}
          resources: {{- toYaml .Values.controller.resources | nindent 12 }}
          {{- end }}
          name: nx-cloud-workflow-controller
          securityContext:
            runAsUser: 1000
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - 'ALL'
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.controller.deployment.port }}
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ .Values.controller.deployment.port }}
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            failureThreshold: 10
          {{- if gt (len .Values.controller.deployment.envFrom) 0 }}
          envFrom:
            {{- toYaml .Values.controller.deployment.envFrom | nindent 12}}
          {{- end }}
          env:
            - name: VALKEY_CONNECTION_STRING
              value: valkey://valkey-master.{{ .Values.global.namespace }}.svc.cluster.local:6379
          {{- if gt (len .Values.controller.deployment.env) 0 }}
            {{- toYaml .Values.controller.deployment.env | nindent 12 }}
          {{- end }}
          {{- with .Values.secret }}
          {{- if .name }}
          {{- if .valkeyPassword }}
            - name: VALKEY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .name }}
                  key: {{ .valkeyPassword }}
          {{- end }}
          {{- if .awsS3AccessKeyId }}
            - name: AWS_S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .name }}
                  key: {{ .awsS3AccessKeyId }}
            - name: AWS_S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .name }}
                  key: {{ .awsS3SecretAccessKey }}
          {{- end }}
          {{- end }}
          {{- end }}
      serviceAccount: {{ .Values.serviceAccounts.controller.name }}
      serviceAccountName: {{ .Values.serviceAccounts.controller.name }}
      terminationGracePeriodSeconds: 10
