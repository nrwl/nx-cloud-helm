global:
  imageTag: '2405.02.15'

nxCloudAppURL: 'URL_TO_ACCESS_INGRESS_FROM_DEV_MACHINES'

secret:
  name: 'cloudsecret'
  nxCloudMongoServerEndpoint: 'NX_CLOUD_MONGO_SERVER_ENDPOINT'
  adminPassword: 'ADMIN_PASSWORD'

# Resource class configuration
resourceClassConfiguration:
  name: "resource-class-config"
  path: "agentConfigs.yaml"

# When creating new values files for testing, bring over the lines below. The generated environment is quite resource
# constrained and with the default settings from values.yaml some of the pods will fail to schedule.
frontend:
  serviceAccountName: 'nx-cloud-sa'
  deployment:
    env:
      - name: TEST_VARIABLE
        value: 'test'
  service:
    annotations:
      my.special-annotation: "annotated"
  resources:
    requests:
      memory: '0.5Mi'
      cpu: '0.1'

nxApi:
  serviceAccountName: 'nx-cloud-sa'
  deployment:
    env:
      - name: TEST_VARIABLE
        value: 'test'
  service:
    annotations:
      my.special-annotation: "annotated"
  resources:
    requests:
      memory: '0.5Mi'
      cpu: '0.1'

fileServer:
  serviceAccountName: 'nx-cloud-sa'
  deployment:
    env:
      - name: TEST_VARIABLE
        value: 'test'
    port: 5000
  service:
    port: 5000
    annotations:
      my.special-annotation: "annotated"
  resources:
    requests:
      memory: '0.5Mi'
      cpu: '0.1'

aggregator:
  serviceAccountName: 'nx-cloud-sa'
  schedule: "*/10 * * * *"
  env:
    - name: TEST_VARIABLE
      value: 'test'
  resources:
    requests:
      memory: '0.5Mi'
      cpu: '0.1'

messagequeue:
  serviceAccountName: 'nx-cloud-sa'
  deployment:
    port: 61616
  service:
    port: 61616

extraManifests:
  serviceAccount:
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: nx-cloud-sa
      namespace: default
  secret:
    apiVersion: v1
    kind: Secret
    metadata:
      name: cloudsecret
      namespace: default
    type: Opaque
    stringData:
      NX_CLOUD_MONGO_SERVER_ENDPOINT: "mongodb://127.0.0.1"
      ADMIN_PASSWORD: "SOME_ADMIN_PASSWORD"
      GITHUB_SECRET: "I_AM_A_SECRET_VALUE"
      GH_CLIENT_ID: "I_AM_A_SECRET_VALUE"
      GH_CLIENT_SECRET_VALUE: "I_AM_A_SECRET_VALUE"
      SOME_SECRET_TOKEN: "I_AM_A_SECRET_VALUE"
      GITLAB_ACCESS_TOKEN: "I_AM_A_SECRET_VALUE"
      GITHUB_AUTH_CLIENT_ID: "A_GITHUB_ID"
      GITHUB_AUTH_CLIENT_SECRET: "A_GITHUB_CLIENT_SECRET"
      GITHUB_WEBHOOK_SECRET: "A_GITHUB_SECRET_VALUE"
      GITHUB_AUTH_TOKEN: "A_GITHUB_SECRET_VALUE"
      GITHUB_APP_PRIVATE_KEY: "A_GITHUB_SECRET_VALUE"
      GITHUB_APP_ID: "A_GITHUB_SECRET_VALUE"
      AWS_KEY: "MYAWSKEY"
      AWS_SECRET: "SUPER_SECRET_AWS_SECRET"
  resourceClassConfigMap:
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: resource-class-config
      namespace: default
    data:
      agentConfigs.yaml: |
        resourceClasses:
          - platform: docker
            architecture: amd64
            os: linux
            identifier: docker_linux_amd64/small
            size: small
            cpu: "0.5"
            memory: "1Gi"
            memoryLimit: "2Gi"
            cpuLimit: "1"
          - platform: docker
            architecture: amd64
            os: linux
            identifier: docker_linux_amd64/medium
            size: medium
            cpu: "1"
            memory: "2Gi"
            memoryLimit: "4Gi"
            cpuLimit: "2"
