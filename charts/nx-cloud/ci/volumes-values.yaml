global:
  nxCloudAppURL: "https://nx.test"
  mongodbConnectionString:
    secretName: nx-cloud-credentials
    secretKey: NX_CLOUD_MONGO_SERVER_ENDPOINT

extraObjects:
  appSecrets:
    apiVersion: v1
    kind: Secret
    metadata:
      name: nx-cloud-credentials
    type: Opaque
    stringData:
      VALKEY_PASSWORD: password
      NX_CLOUD_MONGO_SERVER_ENDPOINT: mongodb://mongo-mongodb-0.mongo-mongodb-headless.mongodb.svc.cluster.local:27017
      ADMIN_PASSWORD: password

  fileServerConfig:
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: file-server-config
    data:
      config.json: "file-server-config"

  aggregatorConfig:
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: aggregator-config
    data:
      config.json: "aggregator-config"

  frontendConfig:
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: frontend-config
    data:
      config.json: "frontend-config"

  apiConfig:
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: api-config
    data:
      config.json: "api-config"

# Test volumes and volumeMounts for file-server
fileServer:
  enabled: true
  deployment:
    volumes:
      - name: file-server-config
        configMap:
          name: file-server-config
      - name: file-server-data
        emptyDir: {}
    volumeMounts:
      - name: file-server-config
        mountPath: /app/config
      - name: file-server-data
        mountPath: /app/data
    resources: null

# Test volumes and volumeMounts for aggregator
aggregator:
  cronjob:
    env:
      NX_CLOUD_SKIP_SLOW_AGGREGATOR_QUERIES: 'true'
      NX_CLOUD_LOG_OUTPUT_FORMAT: 'json'
    envValueFrom:
      ADMIN_PASSWORD:
        secretKeyRef:
          name: nx-cloud-credentials
          key: ADMIN_PASSWORD
    volumes:
      - name: aggregator-config
        configMap:
          name: aggregator-config
      - name: aggregator-logs
        emptyDir: {}
    volumeMounts:
      - name: aggregator-config
        mountPath: /app/config
      - name: aggregator-logs
        mountPath: /app/logs
    resources: null

# Test volumes and volumeMounts for frontend
frontend:
  deployment:
    env:
      NX_API_INTERNAL_BASE_URL: 'http://nx-cloud-nx-api-service'
    envValueFrom:
        secretKeyRef:
          name: nx-cloud-credentials
          key: NX_CLOUD_MONGO_SERVER_ENDPOINT
    volumes:
      - name: frontend-config
        configMap:
          name: frontend-config
      - name: frontend-assets
        emptyDir: {}
    volumeMounts:
      - name: frontend-config
        mountPath: /app/config
      - name: frontend-assets
        mountPath: /app/assets
    resources: null

# Test volumes and volumeMounts for api
api:
  deployment:
    env:
      FILE_SERVER_INTERNAL_BASE_URL: http://nx-cloud-file-server-service
      FILE_SERVER_INTERNAL_PORT: "5000"
      USE_VALKEY: "true"
      VALKEY_CLIENT_PROVIDER: redisson
      VALKEY_USE_SENTINEL: "true"
      VALKEY_SENTINEL_MASTER_NAME: "nxcloud"
      VALKEY_PRIMARY_ADDRESS: valkey-node-0.valkey-headless.valkey.svc.cluster.local
      VALKEY_REPLICA_ADDRESSES: "valkey-node-1.valkey-headless.valkey.svc.cluster.local,valkey-node-2.valkey-headless.valkey.svc.cluster.local"
      VALKEY_PORT: "6379"
      VALKEY_SENTINEL_PORT: "26379"
      VALKEY_USERNAME: "default"
      ACTIVEMQ_ADDRESS: tcp://nx-cloud-messagequeue:61616
    envValueFrom:
      VALKEY_PASSWORD:
        secretKeyRef:
          name: nx-cloud-credentials
          key: VALKEY_PASSWORD
    volumes:
      - name: api-config
        configMap:
          name: api-config
      - name: api-temp
        emptyDir: {}
    volumeMounts:
      - name: api-config
        mountPath: /app/config
      - name: api-temp
        mountPath: /app/temp
    resources: null
