{{- define "nxCloud.aggregator.template" }}
spec:
  template:
    spec:
      {{- if .Values.aggregator.serviceAccountName }}
      serviceAccountName: {{ .Values.aggregator.serviceAccountName }}
      {{- end }}
      {{- if .Values.selfSignedCertConfigMap }}
      initContainers:
        - command:
            - sh
            - /scripts/find-java-security.sh
          image: {{ include "nxCloud.images.aggregator.image" . }}
          name: copy-cacerts
          {{- if .Values.aggregator.securityContext }}
          securityContext:
          {{- toYaml .Values.aggregator.securityContext | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /cacerts
              name: cacerts
            - mountPath: /scripts
              name: java-security-script
      {{- end}}
      containers:
        - name: nx-cloud-aggregator
          image: {{ include "nxCloud.images.aggregator.image" . }}
          imagePullPolicy: {{ .Values.aggregator.image.pullPolicy | quote }}
            {{- if .Values.aggregator.resources }}
          resources: {{- toYaml .Values.aggregator.resources | nindent 16 }}
            {{- end }}
          {{- if .Values.aggregator.securityContext }}
          securityContext:
          {{- toYaml .Values.aggregator.securityContext | nindent 12 }}
          {{- end }}
          {{ include "nxCloud.volumeMounts" (dict "component" .Values.aggregator "selfSigned" .Values.selfSignedCertConfigMap "resourceClass" (and .Values.resourceClassConfiguration.name .Values.resourceClassConfiguration.path)) | indent 10 }}
          env:
          {{- include "nxCloud.env.mongoSecrets" . | indent 12 }}
          {{- include "nxCloud.env.verboseLogging" . | indent 12 }}
          {{- include "nxCloud.env.mode" . | indent 12 }}
          {{- include "nxCloud.env.verboseMongoLogging" . | indent 12 }}
          {{- if .Values.aggregator.env}}
            {{- toYaml .Values.aggregator.env | nindent 12 }}
          {{- end }}
          {{- if .Values.clearRecordsOlderThanDays }}
            - name: NX_CLOUD_DB_RUN_DATA_EXPIRATION_IN_DAYS
              value: '{{ .Values.clearRecordsOlderThanDays }}'
            - name: NX_CLOUD_DB_HASH_DATA_EXPIRATION_IN_DAYS
              value: '{{ .Values.clearRecordsOlderThanDays }}'
            - name: NX_CLOUD_DB_HASH_DETAILS_EXPIRATION_IN_DAYS
              value: '{{ .Values.clearRecordsOlderThanDays }}'
          {{- end }}
          {{- if and .Values.resourceClassConfiguration.name .Values.resourceClassConfiguration.path }}
            - name: NX_CLOUD_RESOURCE_CLASS_FILEPATH
              value: '/opt/nx-cloud/resource-classes/agentConfigs.yaml'
          {{- end }}
          {{- if .Values.secret.adminPassword }}
            {{- if .Values.secret.name }}
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.adminPassword }}
            {{- end }}
          {{- end }}
          {{- if .Values.useCosmosDb }}
            - name: NX_CLOUD_USE_MONGO42
              value: 'false'
          {{- end }}
      {{ include "nxCloud.volumes" (dict "component" .Values.aggregator "selfSigned" .Values.selfSignedCertConfigMap "resourceClass" (and .Values.resourceClassConfiguration.name .Values.resourceClassConfiguration.path) "resourceClassConfig" .Values.resourceClassConfiguration) | indent 6 }}
      restartPolicy: OnFailure
{{- end }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: nx-cloud-aggregator
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "nxCloud.app.labels" . | indent 4 }}
spec:
  schedule: {{ .Values.aggregator.schedule | quote }}
  concurrencyPolicy: Forbid
  jobTemplate:
    {{- include "nxCloud.aggregator.template" . | indent 4 }}
