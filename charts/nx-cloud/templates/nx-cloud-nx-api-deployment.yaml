---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nx-cloud-nx-api
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "nxCloud.app.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.nxApi.deployment.replicas | default .Values.replicas.nxApi }}
  selector:
    matchLabels:
      app: nx-cloud-nx-api
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 300
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: nx-cloud-nx-api
    spec:
      terminationGracePeriodSeconds: 60
      {{- if .Values.awsS3.serviceAccountName }}
      serviceAccountName: {{ .Values.awsS3.serviceAccountName }}
      {{- end }}
      {{- if .Values.selfSignedCertConfigMap }}
      initContainers:
        - command:
            - sh
            - -c
            - cp -r /usr/lib/jvm/java-17-amazon-corretto/jre/lib/security /cacerts
          image: {{ include "nxCloud.images.nxApi.image" . }}
          name: copy-cacerts
              {{- if .Values.nxApi.securityContext }}
          securityContext:
              {{- toYaml .Values.nxApi.securityContext | nindent 12 }}
              {{- end }}
          volumeMounts:
            - mountPath: /cacerts
              name: cacerts
      {{- end}}
      containers:
        - name: nx-cloud-nx-api
          image: {{ include "nxCloud.images.nxApi.image" . }}
          imagePullPolicy: {{ .Values.nxApi.image.pullPolicy | quote }}
          {{- if .Values.nxApi.resources }}
          resources: {{- toYaml .Values.nxApi.resources | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.nxApi.deployment.port }}
          {{- if .Values.nxApi.securityContext }}
          securityContext:
          {{- toYaml .Values.nxApi.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.selfSignedCertConfigMap }}
          volumeMounts:
            - mountPath: /usr/lib/jvm/java-17-amazon-corretto/jre/lib/security
              name: cacerts
              subPath: security
            - mountPath: /self-signed-certs
              name: self-signed-certs-volume
          {{- end}}
          startupProbe:
            httpGet:
              path: /nx-cloud/uptime-check
              port: {{ .Values.nxApi.deployment.port }}
            initialDelaySeconds: 10
            failureThreshold: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /nx-cloud/uptime-check
              port: {{ .Values.nxApi.deployment.port }}
            initialDelaySeconds: 30
          {{- if .Values.nxApi.deployment.readinessProbe }}
          readinessProbe: {{- toYaml .Values.nxApi.deployment.readinessProbe | nindent 12 }}
          {{- end }}
          env:
          {{- include "nxCloud.env.nxCloudAppUrl" . | indent 12 }}
          {{- include "nxCloud.env.mode" . | indent 12 }}
          {{- include "nxCloud.frontend.scm.githubAppEnv" . | indent 12 }}
          {{- include "nxCloud.frontend.scm.all" . | indent 12 }}
          {{- include "nxCloud.env.verboseLogging" . | indent 12 }}
          {{- include "nxCloud.env.verboseMongoLogging" . | indent 12 }}
          {{- include "nxCloud.env.mongoSecrets" . | indent 12 }}
          {{- include "nxCloud.workflows.serviceTarget" . | indent 12 }}
          {{- if .Values.nxApi.deployment.env }}
            {{- toYaml .Values.nxApi.deployment.env | nindent 12 }}
          {{- end }}
          {{- if .Values.enableMessageQueue }}
            - name: ACTIVEMQ_ADDRESS
              value: tcp://nx-cloud-messagequeue:61616
          {{- end }}
          {{- with .Values.awsS3 }}
            {{- if .enablePathStyleAccess }}
            - name: AWS_S3_ENABLE_PATH_STYLE_ACCESS
              value: 'TRUE'
            {{- end }}
            {{- if .accelerated }}
            - name: AWS_S3_ACCELERATED
              value: 'TRUE'
            {{- end }}
            {{- if .bucket }}
            - name: AWS_S3_BUCKET
              value: {{ .bucket }}
            {{- end }}
            {{- if .endpoint }}
            - name: AWS_S3_ENDPOINT
              value: {{ .endpoint }}
            {{- end }}
          {{- end }}
          {{- with .Values.secret }}
          {{- if .awsS3AccessKeyId }}
            {{- if .name }}
            - name: AWS_S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .name }}
                  key: {{ .awsS3AccessKeyId }}
            - name: AWS_S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .name }}
                  key: {{ .awsS3SecretAccessKey }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if .Values.azure.enabled }}
            - name: AZURE_CONTAINER
              value: '{{ .Values.azure.container }}'
            {{- if .Values.secret.name }}
            - name: AZURE_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.azureConnectionString }}
            {{- end }}
          {{- end }}
        {{- if .Values.fixedBatchSize }}
            - name: NX_CLOUD_FIXED_BATCH_SIZE
              value: {{ .Values.fixedBatchSize }}
        {{- end }}
        {{- if .Values.useCosmosDb }}
            - name: NX_CLOUD_USE_MONGO42
              value: 'false'
        {{- end }}
      {{- if .Values.selfSignedCertConfigMap }}
      volumes:
        - emptyDir: { }
          name: cacerts
        - configMap:
            name: {{ .Values.selfSignedCertConfigMap }}
          name: self-signed-certs-volume
      {{- end }}