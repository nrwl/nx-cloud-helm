global:
  labels: {}
  podLabels: {}
  imageTag: "2025.06.3"
  imagePullPolicy: IfNotPresent
  imagePullSecrets: []
  verboseLogging: false
  logLevel: "INFO"
  nxCloudAppURL: ""

config:
  agentConfigs: ""

ingress:
  enabled: true
  annotations: {}
  labels: {}
  className: ""
  host: ""
  tls:
    enabled: false
    secretName: ""
    hosts: []
  additionalPaths: []

fileServer:
  enabled: false
  verboseLogging: false
  logLevel: "INFO"

  image:
    repository: "nxprivatecloud/nx-cloud-file-server"
    tag: ""
    pullPolicy: IfNotPresent

  service:
    annotations: {}
    labels: {}
    name: nx-cloud-file-server-service
    type: ClusterIP
    port: 5000

  deployment:
    annotations: {}
    labels: {}
    podLabels: {}
    port: 5000
    env:
      - name: NX_CACHE_EXPIRATION_PERIOD_IN_DAYS
        value: "1"

    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 1
        maxSurge: 0

    envFrom: []

    securityContext: {}

    affinity: {}
    tolerations: {}
    nodeSelector: {}

    resources:
      limits: {}
      requests:
        memory: '500Mi'
        cpu: '500m'

    volumes: []
    volumeMounts: []

  pvc:
    name: nx-cloud-file-server
    annotations: {}
    labels: {}
    storageClassName: ""
    size: 10Gi
    helmResourcePolicy: keep

  serviceAccount:
    create: true
    name: nx-cloud-file-server
    annotations: {}
    labels: {}
    automount: false

aggregator:
  verboseLogging: false
  logLevel: "INFO"

  image:
    repository: "nxprivatecloud/nx-cloud-aggregator"
    tag: ""
    pullPolicy: IfNotPresent

  cronjob:
    schedule: "*/10 * * * *"
    annotations: {}
    labels: {}
    podLabels: {}
    env: []
    envFrom: []

    securityContext: {}

    affinity: {}
    tolerations: {}
    nodeSelector: {}

    resources:
      limits: {}
      requests:
        memory: '1200Mi'
        cpu: '500m'

    volumes: []
    volumeMounts: []

  serviceAccount:
    create: true
    name: nx-cloud-aggregator
    annotations: {}
    labels: {}
    automount: false

  secret:
    create: false

frontend:
  verboseLogging: false
  logLevel: "INFO"

  image:
    repository: "nxprivatecloud/nx-cloud-frontend"
    tag: ""
    pullPolicy: ""

  service:
    annotations: {}
    labels: {}
    name: nx-cloud-frontend-service
    type: ClusterIP
    port: 8080

  deployment:
    annotations: {}
    labels: {}
    podLabels: {}
    replicas: 1
    port: 4202
    env: []

    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1

    envFrom: []

    securityContext: {}

    affinity: {}
    tolerations: {}
    nodeSelector: {}

    resources:
      limits: {}
      requests:
        memory: '500Mi'
        cpu: '500m'

    volumes: []
    volumeMounts: []

  serviceAccount:
    create: true
    name: nx-cloud-frontend
    annotations: {}
    labels: {}
    automount: false

api:
  verboseLogging: false
  logLevel: "INFO"

  image:
    repository: "nxprivatecloud/nx-cloud-nx-api"
    tag: ""
    pullPolicy: ""

  service:
    annotations: {}
    labels: {}
    name: nx-cloud-nx-api-service
    type: ClusterIP
    port: 4203

  deployment:
    annotations: {}
    labels: {}
    podLabels: {}
    replicas: 1
    port: 4203
    env: []

    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1

    envFrom: []

    securityContext: {}

    affinity: {}
    tolerations: {}
    nodeSelector: {}

    resources:
      limits: {}
      requests:
        memory: '1000Mi'
        cpu: '1000m'

    volumes: []
    volumeMounts: []

  serviceAccount:
    create: true
    name: nx-cloud-nx-api
    annotations: {}
    labels: {}
    automount: false

workflowController:
  service:
    enabled: false
    name: "nx-cloud-workflow-controller-service"
    annotations: {}
    labels: {}
    externalName: ""
    port: 9000
    headless: false

extraObjects: []
