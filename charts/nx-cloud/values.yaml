global:
  labels: {}
  imageTag: "2025.06.3"
  imagePullPolicy: IfNotPresent
  imagePullSecrets: []

config:
  nxCloudAppURL: ""
  verboseLogging: false
  agentConfigs: ""

ingress:
  enabled: true
  annotations: {}
  labels: {}
  className: ""
  host: ""
  tls:
    enabled: false
    secretName: ""
    hosts: []

fileServer:
  enabled: false

  image:
    repository: "nxprivatecloud/nx-cloud-file-server"
    tag: "2025.06.3"
    pullPolicy: IfNotPresent

  service:
    annotations: {}
    labels: {}
    name: nx-cloud-file-server-service
    type: ClusterIP
    port: 5000

  deployment:
    annotations: {}
    labels: {}
    port: 5000
    env:
      - name: NX_CACHE_EXPIRATION_PERIOD_IN_DAYS
        value: "1"

    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 1
        maxSurge: 0

    envFrom: []

    securityContext:
      enabled: true
      runAsUser: 10000
      runAsGroup: 10000
      fsGroup: 10000
      fsGroupChangePolicy: "OnRootMismatch"

    # If you wish to steer placement of the file-server pod(s) these will be applied to the pod spec.
    affinity: {}
    tolerations: {}
    nodeSelector: {}

    resources: {}
    # resources:
    #   limits:
    #     memory: '1Gi'
    #     cpu: '1.0'
    #   requests:
    #     memory: '0.5Gi'
    #     cpu: '0.5'

    volumes: []
    volumeMounts: []

  pvc:
    name: nx-cloud-file-server
    annotations: {}
    labels: {}
    storageClassName: ""
    size: 10Gi
    helmResourcePolicy: keep

  serviceAccount:
    create: true
    name: nx-cloud-file-server
    annotations: {}
    labels: {}
    automount: false

aggregator:
  image:
    repository: "nxprivatecloud/nx-cloud-aggregator"
    tag: "2025.06.3"
    pullPolicy: IfNotPresent

  cronjob:
    schedule: "*/10 * * * *"
    annotations: {}
    labels: {}
    env: []
    envFrom: []

    # If you wish to steer placement of the aggregator pod(s) these will be applied to the pod spec.
    affinity: {}
    tolerations: {}
    nodeSelector: {}

    resources: {}
    # Example resource configuration:
    # resources:
    #   limits:
    #     memory: '1500Mi'
    #     cpu: '1.0'
    #   requests:
    #     memory: '1200M'
    #     cpu: '0.5'

    volumes: []
    volumeMounts: []

  serviceAccount:
    create: true
    name: nx-cloud-aggregator
    annotations: {}
    labels: {}
    automount: false

  secret:
    create: false

frontend:
  image:
    repository: "nxprivatecloud/nx-cloud-frontend"
    tag: "2025.06.3"
    pullPolicy: ""

  service:
    annotations: {}
    labels: {}
    name: nx-cloud-frontend-service
    type: ClusterIP
    port: 8080

  deployment:
    annotations: {}
    labels: {}
    replicas: 1
    port: 4202
    env: []

    strategy:
      type: Recreate
      # Uncomment below for RollingUpdate
      # type: RollingUpdate
      # rollingUpdate:
      #   maxUnavailable: 0
      #   maxSurge: 1

    envFrom: []

    affinity: {}
    tolerations: {}
    nodeSelector: {}

    resources: {}
    # resources:
    #   limits:
    #     memory: '1Gi'
    #     cpu: '1.0'
    #   requests:
    #     memory: '0.5Gi'
    #     cpu: '0.5'

    volumes: []
    volumeMounts: []

  serviceAccount:
    create: true
    name: nx-cloud-frontend
    annotations: {}
    labels: {}
    automount: false

api:
  image:
    repository: "nxprivatecloud/nx-cloud-nx-api"
    tag: "2025.06.3"
    pullPolicy: ""

  service:
    annotations: {}
    labels: {}
    name: nx-cloud-nx-api-service
    type: ClusterIP
    port: 4203

  deployment:
    annotations: {}
    labels: {}
    replicas: 1
    port: 4203
    env: []

    strategy:
      type: Recreate
      # Uncomment below for RollingUpdate
      # type: RollingUpdate
      # rollingUpdate:
      #   maxUnavailable: 0
      #   maxSurge: 1

    envFrom: []
    # If you wish to steer placement of the api pod(s) these will be applied to the pod spec.
    affinity: {}
    tolerations: {}
    nodeSelector: {}

    resources: {}

    volumes: []
    volumeMounts: []

  serviceAccount:
    create: true
    name: nx-cloud-nx-api
    annotations: {}
    labels: {}
    automount: false

workflowController:
  service:
    enabled: false
    name: "nx-cloud-workflow-controller-service"
    annotations: {}
    labels: {}
    externalName: ""
    port: 9000
    headless: false

extraObjects: []
