apiVersion: apps/v1
kind: Deployment
metadata:
  name: nx-cloud-frontend
spec:
  replicas: {{ .Values.replicas.frontend }}
  selector:
    matchLabels:
      app: nx-cloud-frontend
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 300
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: nx-cloud-frontend
    spec:
      containers:
        - name: nx-cloud-frontend
          image:
        {{ if .Values.image.local }}
            localhost:5001/nx-cloud-frontend:next
        {{ else }}
            nxprivatecloud/nx-cloud-frontend:{{ .Values.image.tag }}
        {{end}}

          resources:
            requests:
              memory: '0.5Gi'
              cpu: '0.5'
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:

        {{ if .Values.verboseLogging }}
            - name: NX_VERBOSE_LOGGING
              value: 'true'
        {{ end }}

        {{ if .Values.mode }}
            - name: NX_CLOUD_MODE
              value: '{{ .Values.mode }}'
        {{ end }}

        {{ if eq .Values.mode "public"}}
            - name: NX_CLOUD_AUTH0_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: NX_CLOUD_AUTH0_CLIENT_ID
            - name: NX_CLOUD_AUTH0_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: NX_CLOUD_AUTH0_DOMAIN
            - name: NX_CLOUD_AUTH0_AUDIENCE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: NX_CLOUD_AUTH0_AUDIENCE
            - name: STRIPE_PLAN_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: STRIPE_PLAN_ID
            - name: STRIPE_PUBLISHED_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: STRIPE_PUBLISHED_KEY
            - name: ROLLBAR_ENV
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: ROLLBAR_ENV
            - name: ROLLBAR_NX_CLOUD_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: ROLLBAR_TOKEN
            - name: GOOGLE_ANALYTICS_LOGGED_IN_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: GOOGLE_ANALYTICS_LOGGED_IN_ID
        {{ end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nx-cloud-api
spec:
  replicas: {{ .Values.replicas.api }}
  selector:
    matchLabels:
      app: nx-cloud-api
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 300
  minReadySeconds: 20
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: nx-cloud-api
    spec:
      containers:
        - name: nx-cloud-api
          image:
        {{ if .Values.image.local }}
            localhost:5001/nx-cloud-api:next
        {{ else }}
            nxprivatecloud/nx-cloud-api:{{ .Values.image.tag }}
        {{end}}
          resources:
            requests:
              memory: '1Gi'
              cpu: '0.5'
          imagePullPolicy: Always
          ports:
            - containerPort: 4000
          livenessProbe:
            httpGet:
              path: /api/uptime-check
              port: 4000
            initialDelaySeconds: 20
          env:
            - name: NX_CLOUD_APP_URL
              value: {{ .Values.nxCloudAppURL }}

        {{ if .Values.secret.name }}
            - name: NX_CLOUD_MONGO_SERVER_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.nxCloudMongoServerEndpoint }}
        {{ else }}
            - name: SECRET_FILE_NX_CLOUD_MONGO_SERVER_ENDPOINT
              value: {{ .Values.secret.nxCloudMongoServerEndpoint }}
        {{ end }}


        {{ if .Values.saml }}
        {{ if .Values.saml.enabled }}
          {{ if .Values.secret.name }}
            - name: SAML_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.samlCert }}
            - name: SAML_ENTRY_POINT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.samlEntryPoint }}
          {{ else }}
            - name: SAML_CERT
              value: {{ .Values.secret.samlCert }}
            - name: SAML_ENTRY_POINT
              value: {{ .Values.secret.samlEntryPoint }}
          {{ end }}
        {{ end }}
        {{ end }}

        {{ if .Values.github }}
        {{ if .Values.github.auth }}
        {{ if .Values.github.auth.enabled }}
          {{ if .Values.secret.name }}
            - name: GITHUB_AUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.githubAuthClientId }}
            - name: GITHUB_AUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.githubAuthClientSecret }}
          {{ else }}
            - name: SECRET_FILE_GITHUB_AUTH_CLIENT_ID
              value: {{ .Values.secret.githubAuthClientId }}
            - name: SECRET_FILE_GITHUB_AUTH_CLIENT_SECRET
              value: {{ .Values.secret.githubAuthClientSecret }}
          {{ end }}
        {{ end }}
        {{ end }}
        {{ end }}

        {{ if .Values.verboseLogging }}
            - name: NX_VERBOSE_LOGGING
              value: 'true'
            - name: NX_API_LOG_LEVEL
              value: 'DEBUG'
        {{ end }}

        {{ if .Values.mode }}
            - name: NX_CLOUD_MODE
              value: '{{ .Values.mode }}'
        {{ end }}

        {{ if .Values.useCosmosDb }}
            - name: NX_CLOUD_USE_MONGO42
              value: 'false'
        {{ end }}

        {{ if eq .Values.mode "public"}}
            - name: K8S
              value: 'true'
            - name: NX_CLOUD_AUTH0_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: NX_CLOUD_AUTH0_CLIENT_ID
            - name: NX_CLOUD_AUTH0_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: NX_CLOUD_AUTH0_DOMAIN
            - name: NX_CLOUD_AUTH0_AUDIENCE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: NX_CLOUD_AUTH0_AUDIENCE
            - name: API_AUTH0_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: API_AUTH0_DOMAIN
            - name: API_AUTH0_AUDIENCE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: NX_CLOUD_AUTH0_AUDIENCE
            - name: AUTH0_CREDENTIALS_GRANT_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: AUTH0_CREDENTIALS_GRANT_CLIENT_ID
            - name: AUTH0_CREDENTIALS_GRANT_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: AUTH0_CREDENTIALS_GRANT_CLIENT_SECRET
            - name: AUTH0_MANAGEMENT_API_AUDIENCE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: AUTH0_MANAGEMENT_API_AUDIENCE
            - name: MANDRILL_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: MANDRILL_API_KEY
            - name: STRIPE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: STRIPE_API_KEY
            - name: ROLLBAR_ENV
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: ROLLBAR_ENV
            - name: ROLLBAR_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: ROLLBAR_TOKEN
        {{ end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nx-cloud-nx-api
spec:
  replicas: {{ .Values.replicas.nxApi }}
  selector:
    matchLabels:
      app: nx-cloud-nx-api
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 300
  minReadySeconds: 25
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: nx-cloud-nx-api
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: nx-cloud-nx-api
          image:
        {{ if .Values.image.local }}
            localhost:5001/nx-cloud-nx-api:next
        {{ else }}
            nxprivatecloud/nx-cloud-nx-api:{{ .Values.image.tag }}
        {{ end }}
          resources:
            requests:
              memory: '1Gi'
              cpu: '0.5'
          imagePullPolicy: Always
          ports:
            - containerPort: 4203
          livenessProbe:
            httpGet:
              path: /nx-cloud/uptime-check
              port: 4203
            initialDelaySeconds: 30
          env:
            - name: NX_CLOUD_APP_URL
              value: {{ .Values.nxCloudAppURL }}

        {{ if .Values.secret.name }}
            - name: NX_CLOUD_MONGO_SERVER_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.nxCloudMongoServerEndpoint }}
        {{ else }}
            - name: SECRET_FILE_NX_CLOUD_MONGO_SERVER_ENDPOINT
              value: {{ .Values.secret.nxCloudMongoServerEndpoint }}
        {{ end }}

        {{ if .Values.awsS3.accelerated }}
            - name: AWS_S3_ACCELERATED
              value: 'TRUE'
        {{ end }}

        {{ if .Values.awsS3.enabled }}
          {{ if .Values.secret.name }}
            - name: AWS_S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.awsS3AccessKeyId }}
            - name: AWS_S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.awsS3SecretAccessKey }}
          {{ else }}
            - name: SECRET_FILE_AWS_S3_ACCESS_KEY_ID
              value: {{ .Values.secret.awsS3AccessKeyId }}
            - name: SECRET_FILE_AWS_S3_SECRET_ACCESS_KEY
              value: {{ .Values.secret.awsS3SecretAccessKey }}
          {{ end }}

            - name: AWS_S3_BUCKET
              value: {{ .Values.awsS3.bucket }}
        {{ end }}

        {{ if .Values.awsS3.endpoint }}
            - name: AWS_S3_ENDPOINT
              value: {{ .Values.awsS3.endpoint }}
        {{ end }}

        {{ if .Values.azure.enabled }}
            - name: AZURE_CONTAINER
              value: '{{ .Values.azure.container }}'

          {{ if .Values.secret.name }}
            - name: AZURE_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.azureConnectionString }}
          {{ else }}
            - name: SECRET_FILE_AZURE_CONNECTION_STRING
              value: {{ .Values.secret.azureConnectionString }}
          {{ end }}
        {{ end }}

{{ if .Values.github.pr.enabled }}
  {{ if eq .Values.github.pr.mode "webhook" }}
            - name: NX_CLOUD_VCS_INTEGRATION_TYPE
              value: 'GITHUB_WEBHOOK'
    {{ if .Values.github.pr.apiUrl }}
            - name: GITHUB_API_URL
              value: {{ .Values.github.pr.apiUrl }}
    {{ end }}

    {{ if .Values.github.pr.remoteRepositoryName }}
            - name: NX_CLOUD_REMOTE_REPOSITORY_NAME
              value: {{ .Values.github.pr.remoteRepositoryName }}
    {{ end }}

    {{ if .Values.secret.name }}
            - name: GITHUB_WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.githubWebhookSecret }}
            - name: GITHUB_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.githubAuthToken }}
    {{ else }}
            - name: SECRET_FILE_GITHUB_WEBHOOK_SECRET
              value: {{ .Values.secret.githubWebhookSecret }}
            - name: SECRET_FILE_GITHUB_AUTH_TOKEN
              value: {{ .Values.secret.githubAuthToken }}
    {{ end }}

    {{ if .Values.github.pr.defaultWorkspaceId }}
            - name: NX_CLOUD_INTEGRATION_DEFAULT_WORKSPACE_ID
              value: {{ .Values.github.pr.defaultWorkspaceId }}
    {{ end }}
  {{ end }}

  {{ if eq .Values.github.pr.mode "eventless" }}
            - name: NX_CLOUD_VCS_INTEGRATION_TYPE
              value: 'GITHUB_EVENTLESS'

    {{ if .Values.github.pr.apiUrl }}
            - name: NX_CLOUD_GITHUB_API_URL
              value: {{ .Values.github.pr.apiUrl }}
    {{ end }}
    {{ if .Values.github.pr.remoteRepositoryName }}
            - name: NX_CLOUD_REMOTE_REPOSITORY_NAME
              value: {{ .Values.github.pr.remoteRepositoryName }}
    {{ end }}

    {{ if .Values.secret.name }}
      {{ if .Values.secret.githubAuthToken }}
            - name: NX_CLOUD_GITHUB_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.githubAuthToken }}
      {{ end }}
      {{ if .Values.secret.githubAppId }}
            - name: NX_CLOUD_GITHUB_APP_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.githubAppId }}
      {{end}}
      {{ if .Values.secret.githubPrivateKey }}
            - name: NX_CLOUD_GITHUB_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ .Values.secret.githubPrivateKey }}
      {{ end }}
    {{ else }}
      {{ if .Values.secret.githubAuthToken }}
            - name: SECRET_FILE_NX_CLOUD_GITHUB_AUTH_TOKEN
              value: {{ .Values.secret.githubAuthToken }}
      {{ end }}
      {{ if .Values.secret.githubAppId }}
            - name: SECRET_FILE_NX_CLOUD_GITHUB_APP_ID
              value: {{ .Values.secret.githubAppId }}
      {{ end }}
      {{ if .Values.secret.githubPrivateKey }}
            - name: SECRET_FILE_NX_CLOUD_GITHUB_PRIVATE_KEY
              value: {{ .Values.secret.githubPrivateKey }}
      {{ end }}
    {{ end }}
  {{ end }}
{{ end }}

{{ if .Values.gitlab.mr.enabled }}
          - name: NX_CLOUD_VCS_INTEGRATION_TYPE
            value: "GITLAB_EVENTLESS"

  {{ if .Values.gitlab.projectId }}
          - name: NX_CLOUD_GITLAB_PROJECT_ID
            value: {{ .Values.gitlab.projectId }}
  {{ end }}
  {{ if .Values.gitlab.apiUrl }}
          - name: NX_CLOUD_GITLAB_BASE_URL
            value: {{ .Values.gitlab.apiUrl }}
  {{ end }}
  {{ if .Values.secret.name }}
    {{ if .Values.secret.gitlabAccessToken }}
          - name: NX_CLOUD_GITLAB_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secret.name }}
                key: {{ .Values.secret.gitlabAccessToken }}
    {{ end }}
  {{ else }}
          - name: SECRET_FILE_NX_CLOUD_GITLAB_ACCESS_TOKEN
            value: {{ .Values.secret.gitlabAccessToken }}
  {{ end }}
{{ end }}


        {{ if .Values.verboseLogging }}
            - name: NX_VERBOSE_LOGGING
              value: 'true'
            - name: NX_API_LOG_LEVEL
              value: 'DEBUG'
        {{ end }}

        {{ if .Values.verboseMongoLogging }}
            - name: NX_MONGO_LOG_LEVEL
              value: 'DEBUG'
        {{ end }}

        {{ if .Values.fixedBatchSize }}
            - name: NX_CLOUD_FIXED_BATCH_SIZE
              value: {{ .Values.fixedBatchSize }}
        {{ end }}

        {{ if .Values.mode }}
            - name: NX_CLOUD_MODE
              value: '{{ .Values.mode }}'
        {{ end }}

        {{ if .Values.useCosmosDb }}
            - name: NX_CLOUD_USE_MONGO42
              value: 'false'
        {{ end }}

        {{ if eq .Values.mode "public"}}
            - name: GITHUB_APP_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: GITHUB_APP_ID
            - name: GITHUB_APP_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: GITHUB_APP_PRIVATE_KEY
            - name: GITHUB_BOT_USERID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: GITHUB_BOT_USERID
            - name: GITHUB_WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: GITHUB_WEBHOOK_SECRET
            - name: ROLLBAR_ENV
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: ROLLBAR_ENV
            - name: ROLLBAR_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: ROLLBAR_TOKEN
        {{ end }}
{{ if and (not .Values.awsS3.enabled) (not .Values.azure.enabled) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nx-cloud-file-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nx-cloud-file-server
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 300
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      labels:
        app: nx-cloud-file-server
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: cloud-volume
      securityContext:
        runAsUser: 10000
        runAsGroup: 10000
        fsGroup: 10000
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
        - name: nx-cloud-file-server
          image:
        {{ if .Values.image.local }}
            localhost:5001/nx-cloud-file-server:next
        {{ else }}
            nxprivatecloud/nx-cloud-file-server:{{ .Values.image.tag }}
        {{end}}
          resources:
            requests:
              memory: '0.5Gi'
              cpu: '0.5'
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          livenessProbe:
            httpGet:
              path: /file/uptime-check
              port: 5000
            initialDelaySeconds: 10
          volumeMounts:
            - mountPath: /data
              name: data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cloud-volume
spec:
  accessModes:
    - ReadWriteOnce
  {{ if .Values.fileStorage.storageClassName }}
  storageClassName: {{ .Values.fileStorage.storageClassName }}
  {{ end}}
  resources:
    requests:
      storage: {{ .Values.fileStorage.size }}
{{ end }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: nx-cloud-aggregator
spec:
  schedule: '*/10 * * * *'
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: nx-cloud-aggregator
              image:
            {{ if .Values.image.local }}
                localhost:5001/nx-cloud-aggregator:next
            {{ else }}
                nxprivatecloud/nx-cloud-aggregator:{{ .Values.image.tag }}
            {{end}}
              resources:
                requests:
                  memory: '1200M'
                  cpu: '500m'
              imagePullPolicy: Always
              env:

            {{ if .Values.secret.name }}
                - name: NX_CLOUD_MONGO_SERVER_ENDPOINT
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.secret.name }}
                      key: {{ .Values.secret.nxCloudMongoServerEndpoint }}
            {{ else }}
                - name: SECRET_FILE_NX_CLOUD_MONGO_SERVER_ENDPOINT
                  value: {{ .Values.secret.nxCloudMongoServerEndpoint }}
            {{ end }}

            {{ if .Values.secret.adminPassword }}
              {{ if .Values.secret.name }}
                - name: ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.secret.name }}
                      key: {{ .Values.secret.adminPassword }}
              {{ else }}
                - name: SECRET_FILE_ADMIN_PASSWORD
                  value: {{ .Values.secret.adminPassword }}
              {{ end }}
            {{ end }}

            {{ if .Values.verboseLogging }}
                - name: NX_VERBOSE_LOGGING
                  value: 'true'
                - name: NX_API_LOG_LEVEL
                  value: 'DEBUG'
            {{ end }}

            {{ if .Values.verboseMongoLogging }}
                - name: NX_MONGO_LOG_LEVEL
                  value: 'DEBUG'
            {{ end }}

            {{ if .Values.mode }}
                - name: NX_CLOUD_MODE
                  value: '{{ .Values.mode }}'
            {{ end }}

            {{ if .Values.useCosmosDb }}
                - name: NX_CLOUD_USE_MONGO42
                  value: 'false'
            {{ end }}

            {{ if eq .Values.mode "public"}}
                - name: AGGREGATOR_DEAD_MAN_SNITCH_URI
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.secret.name }}
                      key: AGGREGATOR_DEAD_MAN_SNITCH_URI
                - name: AGGREGATE_JOB_SNITCH
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.secret.name }}
                      key: AGGREGATE_JOB_SNITCH
                - name: STRIPE_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.secret.name }}
                      key: STRIPE_API_KEY
                - name: ROLLBAR_ENV
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.secret.name }}
                      key: ROLLBAR_ENV
                - name: ROLLBAR_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.secret.name }}
                      key: ROLLBAR_TOKEN
            {{ end }}
          restartPolicy: OnFailure
{{ if not .Values.ingress.skip }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nx-cloud-ingress
  annotations:
    {{ if .Values.ingress.globalStaticIpName }}
    kubernetes.io/ingress.global-static-ip-name: {{ .Values.ingress.globalStaticIpName }}
    {{ end }}
    {{ if .Values.ingress.managedCertificates }}
    networking.gke.io/managed-certificates: {{ .Values.ingress.managedCertificates }}
    {{ end }}
    {{ if .Values.ingress.class }}
    kubernetes.io/ingress.class: {{ .Values.ingress.class }}
    {{ end }}
    {{ if eq .Values.ingress.class "nginx" }}
    nginx.ingress.kubernetes.io/proxy-body-size: 1000m
    {{ end }}
    {{ if .Values.ingress.albScheme }}
    alb.ingress.kubernetes.io/scheme: {{ .Values.ingress.albScheme }}
    {{ end }}
    {{ if .Values.ingress.albListenPorts }}
    alb.ingress.kubernetes.io/listen-ports: {{ .Values.ingress.albListenPorts }}
    {{ end }}
    {{ if .Values.ingress.albCertificateArn }}
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.ingress.albCertificateArn }}
    {{ end }}
  labels:
    app: nx-cloud
spec:
  rules:
    - http:
        paths:
          {{ if and (not .Values.awsS3.enabled) (not .Values.azure.enabled) }}
          - path: /file
            pathType: Prefix
            backend:
              service:
                name: nx-cloud-file-server-service
                port:
                  number: 5000
          {{ end }}
          {{- range .Values.nxApiExtraIngressRoutes }}
          - path: {{ . }}
            pathType: Prefix
            backend:
              service:
                name: nx-cloud-nx-api-service
                port:
                  number: 4203
          {{- end }}
          - path: /nx-cloud
            pathType: Prefix
            backend:
              service:
                name: nx-cloud-nx-api-service
                port:
                  number: 4203
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: nx-cloud-nrwl-api-service
                port:
                  number: 4000
          - path: /graphql
            pathType: Prefix
            backend:
              service:
                name: nx-cloud-nrwl-api-service
                port:
                  number: 4000
          - path: /auth
            pathType: Prefix
            backend:
              service:
                name: nx-cloud-nrwl-api-service
                port:
                  number: 4000
          - path: /download
            pathType: Prefix
            backend:
              service:
                name: nx-cloud-nrwl-api-service
                port:
                  number: 4000
  defaultBackend:
    service:
      name: nx-cloud-frontend-service
      port:
        number: 8080
{{ end }}
{{ if and (not .Values.awsS3.enabled) (not .Values.azure.enabled) }}
---
apiVersion: v1
kind: Service
metadata:
  name: nx-cloud-file-server-service
  labels:
    app: nx-cloud-file-server
spec:
  type: NodePort
  selector:
    app: nx-cloud-file-server
  ports:
    - port: 5000
      targetPort: 5000
{{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: nx-cloud-nx-api-service
  labels:
    app: nx-cloud-nx-api
spec:
  type: NodePort
  selector:
    app: nx-cloud-nx-api
  ports:
    - port: 4203
      targetPort: 4203
---
apiVersion: v1
kind: Service
metadata:
  name: nx-cloud-nrwl-api-service
  labels:
    app: nx-cloud-api
spec:
  type: NodePort
  selector:
    app: nx-cloud-api
  ports:
    - port: 4000
      targetPort: 4000
---
apiVersion: v1
kind: Service
metadata:
  name: nx-cloud-frontend-service
  labels:
    app: nx-cloud-frontend
spec:
  type: NodePort
  selector:
    app: nx-cloud-frontend
  ports:
    - port: 8080
      targetPort: 8080
